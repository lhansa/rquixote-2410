[
  {
    "objectID": "index.html#qué-cafetera-prefieres",
    "href": "index.html#qué-cafetera-prefieres",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Qué cafetera prefieres?",
    "text": "¿Qué cafetera prefieres?"
  },
  {
    "objectID": "index.html#si-inviertes-10-millones-en-publicidad-de-qué-te-sirve",
    "href": "index.html#si-inviertes-10-millones-en-publicidad-de-qué-te-sirve",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Si inviertes 10 millones en publicidad, ¿de qué te sirve?",
    "text": "Si inviertes 10 millones en publicidad, ¿de qué te sirve?\n\nEmpresa A invierte dinero en publicidad.\n\nControla a ojo si las ventas suben o bajan un poco después.\n\nEmpresa A quiere saber cuántas ventas ha conseguido gracias a la publicidad.\nEbiquity le da una aproximación que obtiene con modelos estadísticos."
  },
  {
    "objectID": "index.html#observación-esta-charla-no-va-de-econometría",
    "href": "index.html#observación-esta-charla-no-va-de-econometría",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Observación: esta charla no va de econometría",
    "text": "Observación: esta charla no va de econometría\nLo que voy a hacer es contarte el papel de R en ese tipo de proyectos que hacemos."
  },
  {
    "objectID": "index.html#quién-hace-los-modelos-el-consultor-b",
    "href": "index.html#quién-hace-los-modelos-el-consultor-b",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Quién hace los modelos? El consultor B",
    "text": "¿Quién hace los modelos? El consultor B\n\nEl consultor B sabe estadística\nEl consultor B sabe de publi\nEl consultor B sabe Excel\nEl consultor B puede saber programar\n\nPero no se dedica a automatizar tareas ni a procesar ficheros complejos."
  },
  {
    "objectID": "index.html#de-eso-a-lo-que-no-se-dedica-el-consultor-b-es-de-lo-que-te-voy-a-hablar",
    "href": "index.html#de-eso-a-lo-que-no-se-dedica-el-consultor-b-es-de-lo-que-te-voy-a-hablar",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "De eso a lo que no se dedica el consultor B es de lo que te voy a hablar",
    "text": "De eso a lo que no se dedica el consultor B es de lo que te voy a hablar"
  },
  {
    "objectID": "index.html#las-técnicas-estadísticas-son-casi-siempre-las-mismas-de-proyecto-a-proyecto",
    "href": "index.html#las-técnicas-estadísticas-son-casi-siempre-las-mismas-de-proyecto-a-proyecto",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Las técnicas estadísticas son casi siempre las mismas de proyecto a proyecto",
    "text": "Las técnicas estadísticas son casi siempre las mismas de proyecto a proyecto\n\nModelos con datos de panel\nBayesianos\nCon coeficientes dinámicos\nBúsqueda de hiperparámetros\nTransformaciones de variables"
  },
  {
    "objectID": "index.html#las-tareas-repetitivas-se-desarrollan-con-herramientas-internas",
    "href": "index.html#las-tareas-repetitivas-se-desarrollan-con-herramientas-internas",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Las tareas repetitivas se desarrollan con herramientas internas",
    "text": "Las tareas repetitivas se desarrollan con herramientas internas\nEl ecosistema de estas herramientas es lo que te voy a contar ahora."
  },
  {
    "objectID": "index.html#los-consultores-usan-excel",
    "href": "index.html#los-consultores-usan-excel",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Los consultores usan Excel",
    "text": "Los consultores usan Excel\n\nXSec - Una plantilla en Excel"
  },
  {
    "objectID": "index.html#en-excel-especifican-todo-lo-que-r-necesita-saber",
    "href": "index.html#en-excel-especifican-todo-lo-que-r-necesita-saber",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "En Excel especifican todo lo que R necesita saber",
    "text": "En Excel especifican todo lo que R necesita saber\n\n\n\n\n\n\n\nVariable\nExtra\n\n\n\n\nlog(cci)-log(min(cci,na.rm=TRUE))\n…\n\n\ngmpc_giveaway_alt\n…\n\n\nmovav(adstock(dimret(.TV.,160,rescale=FALSE),0.3,normalize=TRUE),1)\n…\n\n\nadstock(m_drms_rd_spnd,0.3)\n…\n\n\nlag(bh_xmas, 1)\n…\n\n\n(OBS == \"2015-12-14\")\n…\n\n\n...\n…"
  },
  {
    "objectID": "index.html#excel-usa-visual-basic",
    "href": "index.html#excel-usa-visual-basic",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Excel usa Visual Basic",
    "text": "Excel usa Visual Basic\nRScriptLoc = \"\"\"\" & gwsRSpec.Range(\"location_RProg\").Value & \"\\library\\ebcore\\estimate_model.R\"\"\"\n\ncmdline = \"\"\"\" & RLocation & \"\"\"\" & \" \" & RScriptLoc & \" \"\"\" & workdir & \"\"\" \"\"\" & \"\" & \"\"\" \"\"\" & xsec_version & \"\" & \"\"\" \"\"\" & bayes_model & \"\" & \"\"\" \"\"\" & API_KEY & \"\" & \"\"\" \"\"\" & API_SECRET & \"\"\"\"\n\nshellAndWait cmdline, True"
  },
  {
    "objectID": "index.html#conoces-rscript-y-commandargs",
    "href": "index.html#conoces-rscript-y-commandargs",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Conoces Rscript y commandArgs()`?",
    "text": "¿Conoces Rscript y commandArgs()`?\n\nmessage(\"Esto contiene el objeto commandArgs():\")\ncommandArgs()\n\nmessage(\"Y puedo utilizar sus elementos:\")\ntoupper(commandArgs()[6])"
  },
  {
    "objectID": "index.html#rscript-lo-usas-desde-línea-de-comandos",
    "href": "index.html#rscript-lo-usas-desde-línea-de-comandos",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Rscript lo usas desde línea de comandos",
    "text": "Rscript lo usas desde línea de comandos\n\n$ Rscript.exe ejemplo-commands.R \"mensaje para editar\"\n\nEsto contiene el objeto commandArgs():\n[1] \"C:/Program Files/R/R-4.4.1/bin/x64/Rterm.exe\"\n[2] \"--no-echo\"\n[3] \"--no-restore\"\n[4] \"--file=ejemplo-commands.R\"\n[5] \"--args\"\n[6] \"mensaje para editar\"\nY puedo utilizar sus elementos:\n[1] \"MENSAJE PARA EDITAR\""
  },
  {
    "objectID": "index.html#nuestro-ecosistema-consiste-en-varias-librerías-de-r-a-las-que-excel-llama-para-cada-tarea",
    "href": "index.html#nuestro-ecosistema-consiste-en-varias-librerías-de-r-a-las-que-excel-llama-para-cada-tarea",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Nuestro ecosistema consiste en varias librerías de R a las que Excel llama para cada tarea",
    "text": "Nuestro ecosistema consiste en varias librerías de R a las que Excel llama para cada tarea"
  },
  {
    "objectID": "index.html#disculpa-mis-modales-que-aún-no-me-he-presentado",
    "href": "index.html#disculpa-mis-modales-que-aún-no-me-he-presentado",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Disculpa mis modales, que aún no me he presentado",
    "text": "Disculpa mis modales, que aún no me he presentado\n\nNo sé mucha estadística\nNo soy buen programador\nMe dedico a las cosas que los buenos estadísticos y programadores tienen que hacer pero no quieren"
  },
  {
    "objectID": "index.html#me-gusta-enseñar-cómo-con-poquito-se-puede-hacer-mucho",
    "href": "index.html#me-gusta-enseñar-cómo-con-poquito-se-puede-hacer-mucho",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Me gusta enseñar cómo con poquito se puede hacer mucho",
    "text": "Me gusta enseñar cómo con poquito se puede hacer mucho\nhttps://leonardohansa.com/rquixote"
  },
  {
    "objectID": "index.html#quién-ha-creado-alguna-librería-de-r",
    "href": "index.html#quién-ha-creado-alguna-librería-de-r",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Quién ha creado alguna librería de R?",
    "text": "¿Quién ha creado alguna librería de R?"
  },
  {
    "objectID": "index.html#los-proyectos-de-modelización-giran-en-torno-a-la-cross-sectional-tool",
    "href": "index.html#los-proyectos-de-modelización-giran-en-torno-a-la-cross-sectional-tool",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Los proyectos de modelización giran en torno a la Cross Sectional Tool…",
    "text": "Los proyectos de modelización giran en torno a la Cross Sectional Tool…\n\nXSec - Una plantilla en Excel"
  },
  {
    "objectID": "index.html#que-necesita-de-r-para-funcionar",
    "href": "index.html#que-necesita-de-r-para-funcionar",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "..que necesita de R para funcionar",
    "text": "..que necesita de R para funcionar\n\nremove(list = ls())\nnecessary_packages &lt;- c(\n  \"aws.s3\",\n  \"data.table\",\n  \"devtools\",\n  \"dplyr\",\n  \"remotes\",\n  \"stringr\",\n  \"tidyr\"\n)\nfor (package in necessary_packages) {\n  if (length(find.package(package, quiet = TRUE)) == 0) {\n    install.packages(\n      package,\n      lib = .Library,\n      repos = \"https://cloud.r-project.org\"\n    )\n  }\n}\n\nsuppressPackageStartupMessages(library(dplyr))\n\n\nxsec_version &lt;- commandArgs()[8]\nif (!is.na(xsec_version)) {\n  xsec_version &lt;- numeric_version(xsec_version)\n}\n\n\npackageStartupMessage(\"==============================================================\")\n## Logo -----------------------------------------------\npackageStartupMessage(\"\n _       _   ______   _______   _______\n  |_   _|   |        |         |\n    |_|     |_____   |_______  |\n   _| |_          |  |         |\n _|     |_  ______|  |_______  |_______\n  \")\nif (length(find.package(\"XSEXCELR\", quiet = TRUE)) != 0) {\n  packageStartupMessage(paste0(\"Package \", \"v.\", packageVersion(\"XSEXCELR\")))\n}\n\npackageStartupMessage(paste0(\"Template \", \"v.\", xsec_version))\npackageStartupMessage(\"==============================================================\")\n\n\n\n## Check package versions -----------------------------------------------\nwriteLines(\"\\nChecking Package Versions ...\")\n\ntryCatch(\n  {\n    ebcore::update_packages(xsec_version)\n  },\n  error = function(e) {}\n)\n\n## Load packages and options ---------------------------------------\nsuppressPackageStartupMessages(library(eble, quietly = TRUE))\nsuppressPackageStartupMessages(library(dplyr, quietly = TRUE))\nsuppressWarnings(suppressPackageStartupMessages(library(XSEXCELR)))\nsuppressPackageStartupMessages(library(methods, quietly = TRUE))\nsuppressPackageStartupMessages(library(lubridate, quietly = TRUE))\n\noptions(\n  error = XSEXCELR:::xsec_error_function,\n  verbose_xsec = TRUE,\n  datatable.old.fread.datetime.character = TRUE\n)\n\n\n\n\n\n## Get name of working directory --------------------------------------------\nspec_dir &lt;- XSEXCELR:::get_spec_dir(cmdarg = commandArgs())\ndecomp_choice &lt;- commandArgs()[7]\nbayes_model &lt;- commandArgs()[9]\naccess_key &lt;- commandArgs()[10]\nsecret_access_key &lt;- commandArgs()[11]\nif (decomp_choice == \"\" || is.na(decomp_choice)) {\n  decomp_choice &lt;- NA\n}\n\n## Log warnings---------------------------------------------------------------\nwarning_file &lt;- file(sprintf(\"%s/RScriptErrors.log\", spec_dir), open = \"wt\")\n\nsink(warning_file, type = \"message\")\n\nif (file.exists(sprintf(\"%s/Done.csv\", spec_dir)) && interactive()) {\n  # Normally deleted by xsec tool to signal when it's safe to save output\n  file.remove(sprintf(\"%s/Done.csv\", spec_dir))\n}\n\n\nif (is.na(bayes_model)) {\n  bayes_model &lt;- FALSE\n} else if (bayes_model == \"True\") {\n  bayes_model &lt;- TRUE\n} else {\n  bayes_model &lt;- FALSE\n}\n\n\nif (!is.na(decomp_choice)) {\n  run_decomp &lt;- TRUE\n} else {\n  run_decomp &lt;- FALSE\n}\n\n## Estimate model using spec stored in spec_dir -----------------------------\nif (bayes_model) {\n  aws_credentials(access_key, secret_access_key)\n  MODEL &lt;- bayes_estimate(\n    spec_dir = spec_dir,\n    save_flag = TRUE,\n    log = FALSE\n  )\n} else {\n  MODEL &lt;- XSEXCELR:::wextimate_decomp(\n    spec_dir = spec_dir,\n    save_flag = TRUE,\n    decomp_choice = \"\",\n    run_decomp = run_decomp\n  )\n}\n\n\n\n### Run custom script\nspec2 &lt;- XSEXCELR:::.importDecompChoice(spec_dir = spec_dir)\n\n# Check if there is a \"Custom Script\" setting in the spec2 data frame\nif (any(spec2$Setting == \"Custom Script\")) {\n  # Retrieve the script location specified under \"Custom Script\"\n  script_loc &lt;- spec2$Value[spec2$Setting == \"Custom Script\"]\n\n  # Validate that the script location is not NA and is a non-empty string\n  if (!is.na(script_loc) && nzchar(script_loc)) {\n    # Split the script location into the file path and any arguments\n    script_parts &lt;- trimws(strsplit(script_loc, \"--\")[[1]])\n    script_path &lt;- normalizePath(script_parts[1])\n\n    # Combine arguments if they exist\n    script_args &lt;- if (length(script_parts) &gt; 1) {\n      paste(shQuote(script_parts[-1]), collapse = \" \")\n    } else {\n      \"\"\n    }\n\n    # Check if the script file exists at the specified path\n    if (file.exists(script_path)) {\n      writeLines(\"Running Custom R-Script...\")\n\n      # Construct the command to run the R script with arguments\n      r_executable &lt;- normalizePath(file.path(R.home(\"bin\"), \"Rscript.exe\"))\n      cmd &lt;- paste(shQuote(r_executable), shQuote(script_path), script_args)\n\n      # Execute the command\n      system(cmd)\n    } else {\n      stop(\"The specified Custom R script could not be found. If you are using custom arguments, please separate them with two hyphens, i.e. myScript.R --Arg1 --Arg2.\")\n    }\n  }\n}\n\n\n## End message --------------------------------------------------------------\nXSEXCELR:::xsec_end_message()"
  },
  {
    "objectID": "index.html#la-herramienta-transforma-variables-a-partir-de-la-sintaxis-r-que-el-usuario-ha-escrito",
    "href": "index.html#la-herramienta-transforma-variables-a-partir-de-la-sintaxis-r-que-el-usuario-ha-escrito",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "La herramienta transforma variables a partir de la sintaxis R que el usuario ha escrito",
    "text": "La herramienta transforma variables a partir de la sintaxis R que el usuario ha escrito\n\nmovav(adstock(dim_ret(tv_region1,160,rescale=FALSE),0.3,normalize=TRUE))"
  },
  {
    "objectID": "index.html#los-rendimientos-decrecientes-son-una-transformación-frecuente-en-publicidad",
    "href": "index.html#los-rendimientos-decrecientes-son-una-transformación-frecuente-en-publicidad",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Los rendimientos decrecientes son una transformación frecuente en publicidad…",
    "text": "Los rendimientos decrecientes son una transformación frecuente en publicidad…\n\\[\nx' = \\frac{x}{x + b}\n\\]\n\n\\(x\\) es la variable explicativa original\n\\(b\\in \\mathbb{R}\\) es un parámetro que hay que estimar"
  },
  {
    "objectID": "index.html#que-visualmente-se-traducen-en-esto",
    "href": "index.html#que-visualmente-se-traducen-en-esto",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "…que visualmente se traducen en esto",
    "text": "…que visualmente se traducen en esto"
  },
  {
    "objectID": "index.html#en-una-de-nuestras-librerías-tenemos-transformaciones-como-estas",
    "href": "index.html#en-una-de-nuestras-librerías-tenemos-transformaciones-como-estas",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "En una de nuestras librerías tenemos transformaciones como estas",
    "text": "En una de nuestras librerías tenemos transformaciones como estas\n\neble::dim_ret\n\nfunction (x, ..., option = c(\"rect\", \"adbug\", \"hill\", \"atan\", \n    \"inversec\", \"asymmetrics\", \"asymptotic\"), rescale = FALSE) \n{\n    option = match.arg(option)\n    params = suppressWarnings(vapply(list(...), as.numeric, numeric(1L)))\n    if (suppressWarnings(any(is.na(params)))) {\n        if (list(...)[which(lapply(list(...), is.character) == \n            TRUE)][[1]] %in% c(\"rect\", \"adbug\", \"hill\", \"atan\", \n            \"inversec\", \"asymmetrics\", \"asymptotic\")) {\n            option = list(...)[which(lapply(list(...), is.character) == \n                TRUE)][[1]]\n            params = params[!is.na(params)]\n        }\n        else {\n            stop(\"check your dim_ret arguments! Specify the option argument, e.g. option = 'rect'\")\n        }\n    }\n    if (length(params) != (n &lt;- switch(option, rect = , atan = 1, \n        adbug = , hill = 2, inversec = 1, asymmetrics = 2, asymptotic = 1))) {\n        if (option %in% c(\"hill\", \"adbug\", \"asymmetrics\")) {\n            stop(\"s parameter value was not provided. Hill, adbug and asymmetrics functions need two parameter values.\")\n        }\n        if (length(params) == 2 & option %in% c(\"rect\")) {\n            stop(\"option value was not provided. s parameter applies only to hill, adbug and asymmetrics functions.\")\n        }\n        else {\n            stop(sprintf(\"incorrect number of parameters for option '%s' in dim ret: expected %i, but got %i\", \n                option, n, length(params)))\n        }\n    }\n    if (any(!is.finite(params))) {\n        stop(\"non-numeric parameter(s) in dim ret\")\n    }\n    if (class(x) == \"integer\" && class(params) == \"integer\") {\n        params = as.double(params)\n    }\n    ind = params == Inf\n    if (all(ind)) {\n        return(x)\n    }\n    if (any(params &lt; 0)) {\n        stop(\"Dimishing returns are not defined for negative values.\")\n    }\n    if (length(params) == 2) {\n        if (params[2] == 0) {\n            stop(\"Dimishing returns are not defined for zero s value.\")\n        }\n        if (max(x, params[1], na.rm = TRUE)^params[2] == Inf & \n            option == \"hill\") {\n            params[2] = 1023 * (log(2)/log(max(x, params[1], \n                na.rm = TRUE)))\n            stop(sprintf(\"the selected s parameter is causing overflow error. The maximum finite value is %s\", \n                round(params[2], 2)))\n        }\n        if (max(x, na.rm = TRUE)^params[2] == Inf & option == \n            \"adbug\") {\n            params[2] = 1023 * (log(2)/log(max(x, na.rm = TRUE)))\n            stop(sprintf(\"the selected s parameter is causing overflow error. The maximum finite value is %s\", \n                round(params[2], 2)))\n        }\n    }\n    y = switch(option, rect = x/(x + params[1]), adbug = x^params[2]/(x^params[2] + \n        params[1]), hill = x^params[2]/(x^params[2] + params[1]^params[2]), \n        atan = atan(x/params[1]), inversec = 1 - exp(-x/params[1]), \n        asymmetrics = 1/(1 + exp(-params[1] * (x - params[2]))), \n        asymptotic = 1 - exp(-x/params[1]))\n    if (rescale) {\n        y = y * params[1]\n    }\n    if (any(ind)) {\n        y[ind] = x[ind]\n    }\n    return(y)\n}\n&lt;bytecode: 0x0000027045266e28&gt;\n&lt;environment: namespace:eble&gt;"
  },
  {
    "objectID": "index.html#el-efecto-ad-stock-simula-el-recuerdo-publicitario",
    "href": "index.html#el-efecto-ad-stock-simula-el-recuerdo-publicitario",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "El efecto ad-stock simula el recuerdo publicitario",
    "text": "El efecto ad-stock simula el recuerdo publicitario"
  },
  {
    "objectID": "index.html#para-este-efecto-también-tenemos-función-en-la-librería-eble",
    "href": "index.html#para-este-efecto-también-tenemos-función-en-la-librería-eble",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Para este efecto también tenemos función en la librería eble",
    "text": "Para este efecto también tenemos función en la librería eble\n\neble::adstock\n\nfunction (x, p, normalize = TRUE, reverse = FALSE) \n{\n    if (length(p) &gt; 1) {\n        stop(\"Input p to adstock must have a length of 1.\")\n    }\n    if (p &lt; 0 | p &gt;= 1) {\n        stop(\"Input p to adstock must be in [0, 1)\")\n    }\n    if (class(x) == \"factor\") {\n        warning(\"factor supplied to adstock function\")\n        x = as.character(x)\n    }\n    x[is.na(x)] = 0\n    if (reverse == FALSE) {\n        if (normalize) {\n            x = x * (1 - p)\n        }\n        x = stats::filter(x, p, method = \"recursive\")\n        return(as.numeric(x))\n    }\n    else {\n        x = rev(adstock(rev(x), p, normalize))\n        return(as.numeric(x))\n    }\n}\n&lt;bytecode: 0x0000027045964680&gt;\n&lt;environment: namespace:eble&gt;"
  },
  {
    "objectID": "index.html#otra-librería-tiene-wrappers-de-funciones-más-típicas",
    "href": "index.html#otra-librería-tiene-wrappers-de-funciones-más-típicas",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Otra librería tiene wrappers de funciones más típicas",
    "text": "Otra librería tiene wrappers de funciones más típicas\n\nebility::safe_left_join\n\nfunction (x, y, by = NULL) \n{\n    n_row = nrow(x)\n    x = left_join(x, y %&gt;% mutate(..check.. = TRUE), by)\n    if (nrow(x) &gt; n_row) {\n        stop(\"Duplicated rows!\")\n    }\n    if (any(ind &lt;- is.na(x[[\"..check..\"]]))) {\n        ind = sample(which(ind), min(10, sum(ind)))\n        print(unique(x[ind, if (is.null(by)) \n            intersect(names(x), names(y))\n        else names(nameifnot((by))), drop = FALSE]))\n        stop(\"Failed to match one or more rows in x.\")\n    }\n    x %&gt;% select(-..check..)\n}\n&lt;bytecode: 0x000002704539b120&gt;\n&lt;environment: namespace:ebility&gt;"
  },
  {
    "objectID": "index.html#súper-cómodo-para-intercambiar-r-y-excel",
    "href": "index.html#súper-cómodo-para-intercambiar-r-y-excel",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Súper cómodo para intercambiar R y Excel",
    "text": "Súper cómodo para intercambiar R y Excel\n\nebility::clipboard\n\nfunction (x = NULL, alloc = object.size(x), ...) \n{\n    if (is.null(x)) {\n        read.table(\"clipboard\", header = TRUE, sep = \"\\t\", ...)\n    }\n    else {\n        if (!is.numeric(alloc)) {\n            stop(\"alloc must be numeric.\")\n        }\n        write.table(x, sprintf(\"clipboard-%d\", alloc), sep = \"\\t\", \n            qmethod = \"double\", row.names = FALSE, ...)\n    }\n}\n&lt;bytecode: 0x0000027042818880&gt;\n&lt;environment: namespace:ebility&gt;"
  },
  {
    "objectID": "index.html#librerías-en-ebverse",
    "href": "index.html#librerías-en-ebverse",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Librerías en ebverse",
    "text": "Librerías en ebverse\n\neble\nebility\nXSEXCELR. Algoritmos de modelización.\ndebcomp. Cálculo de contribuciones en modelos multiplicativos.\nebjobs. Automatización de procesos de la herramienta de modelización.\nebcore. Operaciones tuneadas de R.\nebdb. Lectura de datos de distintas fuentes.\nmediaconsolidator. Procesamiento de datos de inversión en publicidad.\nroicalculator. Cómputo de retorno de la inversión publicitaria, a partir de las contribuciones de los modelos de XSEXCELR y debcomp y de lo procesado por mediaconsolidator."
  },
  {
    "objectID": "index.html#unos-comentarios",
    "href": "index.html#unos-comentarios",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Unos comentarios",
    "text": "Unos comentarios\n\n\nCasi todas las librerías las usamos como backends de las interfaces en Excel\nAlgunas como eble las usamos para procesamiento de datos directamente con código\n\nPero pocas"
  },
  {
    "objectID": "index.html#qué-hacemos-mal",
    "href": "index.html#qué-hacemos-mal",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Qué hacemos mal",
    "text": "Qué hacemos mal\n\nTests\nGit / GitHub"
  },
  {
    "objectID": "index.html#hacemos-muy-pocos-tests",
    "href": "index.html#hacemos-muy-pocos-tests",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Hacemos muy pocos tests",
    "text": "Hacemos muy pocos tests"
  },
  {
    "objectID": "index.html#en-un-test-realizas-operaciones-cuyo-resultado-conoces",
    "href": "index.html#en-un-test-realizas-operaciones-cuyo-resultado-conoces",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "En un test realizas operaciones cuyo resultado conoces",
    "text": "En un test realizas operaciones cuyo resultado conoces\nCada vez que editas tu librería, ejecutas todos los tests para garantizar que lo nuevo no rompe lo que ya funcionaba\n\n# Load the testthat package and the package that contains the function\nlibrary(testthat)\nlibrary(rodolfo)\n\n# Create a test block\ntest_that(\"apply_adstock works correctly\", {\n\n\n  # Test the output of the function with the example data\n  m_adstock &lt;- apply_adstock(loaded_excel_test,\n                             c(target_name, variables_in_model))\n\n\n  expect_type(m_adstock, \"double\")\n  expect_equal(ncol(m_adstock), length(variables_in_model)+1)\n\n  expect_equal(m_adstock, m_adstock_test)\n\n\n})"
  },
  {
    "objectID": "index.html#alojamos-todo-en-github-pero-nos-cuesta-seguir-nuestras-propias-pautas",
    "href": "index.html#alojamos-todo-en-github-pero-nos-cuesta-seguir-nuestras-propias-pautas",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Alojamos todo en GitHub, pero nos cuesta seguir nuestras propias pautas",
    "text": "Alojamos todo en GitHub, pero nos cuesta seguir nuestras propias pautas"
  },
  {
    "objectID": "index.html#quién-ha-hecho-un-shiny-alguna-vez",
    "href": "index.html#quién-ha-hecho-un-shiny-alguna-vez",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Quién ha hecho un shiny alguna vez?",
    "text": "¿Quién ha hecho un shiny alguna vez?"
  },
  {
    "objectID": "index.html#nos-da-pereza-infinita-meter-cambios-en-las-plantillas-de-excel.",
    "href": "index.html#nos-da-pereza-infinita-meter-cambios-en-las-plantillas-de-excel.",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Nos da pereza infinita meter cambios en las plantillas de Excel.",
    "text": "Nos da pereza infinita meter cambios en las plantillas de Excel.\nShiny es nuestra herramienta para ampliar funcionalidades"
  },
  {
    "objectID": "index.html#excel-carga-las-shiny-apps-con-lo-que-hemos-visto-sobre-rscript.exe",
    "href": "index.html#excel-carga-las-shiny-apps-con-lo-que-hemos-visto-sobre-rscript.exe",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Excel carga las Shiny Apps con lo que hemos visto sobre Rscript.exe",
    "text": "Excel carga las Shiny Apps con lo que hemos visto sobre Rscript.exe\n\n### Launch App\n\n# Set Model Directory -----------------------------------------------------\n\nif (interactive()) {\n\n  path_to_data &lt;- \"C:/.XSEXCELR/leo\"\n\n} else {\n\n  path_to_data &lt;- commandArgs()[7]\n\n}\n\n# Set Default Browser -----------------------------------------------------\nif (file.exists('C:/Program Files/Google/Chrome/Application/chrome.exe')){\n\n  options(browser = 'C:/Program Files/Google/Chrome/Application/chrome.exe')\n\n} else if (file.exists('C:/Program Files (x86)/Google/Chrome/Application/chrome.exe')){\n\n  options(browser = 'C:/Program Files (x86)/Google/Chrome/Application/chrome.exe')\n\n} else {\n\n  writeLines('Install Chrome!')\n  Sys.sleep(5)\n  stop('Install Chrome!')\n\n}\n\n\n# Set Shiny App Source ----------------------------------------------------\nshinyDir = paste0(.Library, \"/rosalind/\")\n# rosalind::XsecGa$debug(\"fit_model_round\")\n# debugonce(XSEXCELR::check_cache)\nrosalind::launch(shinyDir, path2dat = path_to_data,\n                 launch.browser = TRUE, quiet = TRUE)"
  },
  {
    "objectID": "index.html#shiny-apps-como-librerías-de-r",
    "href": "index.html#shiny-apps-como-librerías-de-r",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Shiny apps como librerías de R",
    "text": "Shiny apps como librerías de R\nTodas nuestras apps se inspiran en el marco golem (más o menos).\n\n\nC:/Users/Leonardo.Hansa/Documents/tools/rosalind\n├── DESCRIPTION\n├── inst\n│   ├── ga-report-manual-benchmark.R\n│   ├── ga_call_for_binary.R\n│   ├── ga_xsec_manual_tests.R\n│   ├── global.R\n│   ├── launch_app.R\n│   ├── quick_run.R\n│   ├── remove-rosalind.sh\n│   ├── running-tests.R\n│   ├── server.R\n│   ├── ui.R\n│   └── www\n│       ├── ebiquity_theme.css\n│       ├── eblogo.png\n│       ├── footer.html\n│       └── message-handler.js\n├── man\n│   ├── bin2dec.Rd\n│   ├── calculate_variables.Rd\n│   ├── calcula_aic.Rd\n│   ├── calc_fitness.Rd\n│   ├── calc_fitness_test.Rd\n│   ├── check_signo.Rd\n│   ├── create_numeric_vector.Rd\n│   ├── decimal2bin_aux.Rd\n│   ├── df2clip.Rd\n│   ├── dir_load.Rd\n│   ├── dot-dynamic_stack.Rd\n│   ├── dot-onAttach.Rd\n│   ├── extimate.Rd\n│   ├── fire_interrupt.Rd\n│   ├── fire_ready.Rd\n│   ├── fit_model_round.Rd\n│   ├── fit_model_rounded_params_old.Rd\n│   ├── f_xsec.Rd\n│   ├── gaMonitorAsync.Rd\n│   ├── gaMonitorShiny.Rd\n│   ├── ga_xsec.Rd\n│   ├── ga_xsec_real.Rd\n│   ├── geneticParamsUI.Rd\n│   ├── genExecServer.Rd\n│   ├── genExecServer_old.Rd\n│   ├── genResultsServer.Rd\n│   ├── getData.Rd\n│   ├── get_status.Rd\n│   ├── initClassServer.Rd\n│   ├── init_population.Rd\n│   ├── interrupted.Rd\n│   ├── launch.Rd\n│   ├── longitud_en_bin.Rd\n│   ├── rosalind.Rd\n│   ├── save_data.Rd\n│   ├── set_status.Rd\n│   ├── XsecGa.Rd\n│   └── XsecGa2.Rd\n├── NAMESPACE\n├── R\n│   ├── calculate_variables.R\n│   ├── calcula_aic.R\n│   ├── calc_fitness.R\n│   ├── create_numeric_vector.R\n│   ├── dir_load.R\n│   ├── dynamic_stack.R\n│   ├── extimate.R\n│   ├── fitness_xsec.R\n│   ├── fit_model_round.R\n│   ├── fit_model_rounded_params.R\n│   ├── gaMonitorAsync.R\n│   ├── gaMonitorShiny.R\n│   ├── ga_xsec.R\n│   ├── ga_xsec_real.R\n│   ├── getData.R\n│   ├── init_population.R\n│   ├── launch.R\n│   ├── mod_genetic_execution.R\n│   ├── mod_genetic_execution_async.R\n│   ├── mod_genetic_init.R\n│   ├── mod_genetic_params.R\n│   ├── mod_genetic_results.R\n│   ├── RcppExports.R\n│   ├── rosalind-package.R\n│   ├── rosalind.R\n│   ├── save_data.R\n│   ├── status_functions.R\n│   ├── utils.R\n│   ├── XsecGa.R\n│   ├── XsecGa2.R\n│   └── zzz.R\n├── README.md\n├── rosalind.Rproj\n├── src\n│   ├── bin2dec.cpp\n│   ├── bin2dec.o\n│   ├── RcppExports.cpp\n│   ├── RcppExports.o\n│   └── rosalind.dll\n└── vignettes\n    └── rosalind.Rmd"
  },
  {
    "objectID": "index.html#qué-es-una-librería",
    "href": "index.html#qué-es-una-librería",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Qué es una librería?",
    "text": "¿Qué es una librería?"
  },
  {
    "objectID": "index.html#qué-hacemos-mal-1",
    "href": "index.html#qué-hacemos-mal-1",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Qué hacemos mal",
    "text": "Qué hacemos mal\n\nrenv\nShiny modules"
  },
  {
    "objectID": "index.html#cada-proyecto-r-es-de-su-padre-y-de-su-madre",
    "href": "index.html#cada-proyecto-r-es-de-su-padre-y-de-su-madre",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Cada proyecto R es de su padre y de su madre",
    "text": "Cada proyecto R es de su padre y de su madre\n\nCreas una herramienta un día que usa dplyr 0.7.0\nDos años después creas otra que usa dplyr 1.0.0\nSi usas las dos en el mismo ordenador, la palabra más frecuente de tu consola será WARNING."
  },
  {
    "objectID": "index.html#solución-encapsula-en-el-pasado-cada-herramienta-con-renv",
    "href": "index.html#solución-encapsula-en-el-pasado-cada-herramienta-con-renv",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Solución? Encapsula (en el pasado) cada herramienta con renv",
    "text": "¿Solución? Encapsula (en el pasado) cada herramienta con renv\n\nrenv::init()"
  },
  {
    "objectID": "index.html#renv-usa-un-fichero-renv.lock-con-un-listado-muy-concreto-de-librerías-y-versiones-que-usas",
    "href": "index.html#renv-usa-un-fichero-renv.lock-con-un-listado-muy-concreto-de-librerías-y-versiones-que-usas",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "renv usa un fichero renv.lock con un listado muy concreto de librerías y versiones que usas",
    "text": "renv usa un fichero renv.lock con un listado muy concreto de librerías y versiones que usas\nEn lugar de usar la carpeta con librerías de tu versión de R, usará una asociada al proyecto y creada a partir de este fichero.\n{\n  \"R\": {\n    \"Version\": \"4.3.3\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://cloud.r-project.org\"\n      }\n    ]\n  },\n  \"Packages\": {\n    \"BH\": {\n      \"Package\": \"BH\",\n      \"Version\": \"1.84.0-0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"a8235afbcd6316e6e91433ea47661013\"\n    },\n    \"Matrix\": {\n      \"Package\": \"Matrix\",\n      \"Version\": \"1.6-5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\",\n        \"grid\",\n        \"lattice\",\n        \"methods\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"8c7115cd3a0e048bda2a7cd110549f7a\"\n    },\n    \"R6\": {\n      \"Package\": \"R6\",\n      \"Version\": \"2.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"470851b6d5d0ac559e9d01bb352b4021\"\n    },\n    \"RColorBrewer\": {\n      \"Package\": \"RColorBrewer\",\n      \"Version\": \"1.1-3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"45f0398006e83a5b10b72a90663d8d8c\"\n    },\n    \"Rcpp\": {\n      \"Package\": \"Rcpp\",\n      \"Version\": \"1.0.12\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"methods\",\n        \"utils\"\n      ],\n      \"Hash\": \"5ea2700d21e038ace58269ecdbeb9ec0\"\n    },\n    \"RcppTOML\": {\n      \"Package\": \"RcppTOML\",\n      \"Version\": \"0.2.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"Rcpp\"\n      ],\n      \"Hash\": \"c232938949fcd8126034419cc529333a\"\n    },\n    \"anytime\": {\n      \"Package\": \"anytime\",\n      \"Version\": \"0.3.9\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"BH\",\n        \"R\",\n        \"Rcpp\"\n      ],\n      \"Hash\": \"74a64813f17b492da9c6afda6b128e3d\"\n    },\n    \"arrow\": {\n      \"Package\": \"arrow\",\n      \"Version\": \"15.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"assertthat\",\n        \"bit64\",\n        \"cpp11\",\n        \"glue\",\n        \"methods\",\n        \"purrr\",\n        \"rlang\",\n        \"stats\",\n        \"tidyselect\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"117bf4b17bb420d115602b057b1e534a\"\n    },\n    \"askpass\": {\n      \"Package\": \"askpass\",\n      \"Version\": \"1.2.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"sys\"\n      ],\n      \"Hash\": \"cad6cf7f1d5f6e906700b9d3e718c796\"\n    },\n    \"assertthat\": {\n      \"Package\": \"assertthat\",\n      \"Version\": \"0.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"tools\"\n      ],\n      \"Hash\": \"50c838a310445e954bc13f26f26a6ecf\"\n    },\n    \"attempt\": {\n      \"Package\": \"attempt\",\n      \"Version\": \"0.3.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"rlang\"\n      ],\n      \"Hash\": \"d7421bb5dfeb2676b9e4a5a60c2fcfd2\"\n    },\n    \"aws.s3\": {\n      \"Package\": \"aws.s3\",\n      \"Version\": \"0.3.21\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"aws.signature\",\n        \"base64enc\",\n        \"curl\",\n        \"digest\",\n        \"httr\",\n        \"tools\",\n        \"utils\",\n        \"xml2\"\n      ],\n      \"Hash\": \"a0b873f71741bba67e3bc128d8f09fe3\"\n    },\n    \"aws.signature\": {\n      \"Package\": \"aws.signature\",\n      \"Version\": \"0.6.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"base64enc\",\n        \"digest\"\n      ],\n      \"Hash\": \"0006bcef272aad12f78dd5a85fc7f4fc\"\n    },\n    \"backports\": {\n      \"Package\": \"backports\",\n      \"Version\": \"1.4.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"c39fbec8a30d23e721980b8afb31984c\"\n    },\n    \"base64enc\": {\n      \"Package\": \"base64enc\",\n      \"Version\": \"0.1-3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"543776ae6848fde2f48ff3816d0628bc\"\n    },\n    \"bit\": {\n      \"Package\": \"bit\",\n      \"Version\": \"4.0.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"d242abec29412ce988848d0294b208fd\"\n    },\n    \"bit64\": {\n      \"Package\": \"bit64\",\n      \"Version\": \"4.0.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"bit\",\n        \"methods\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"9fe98599ca456d6552421db0d6772d8f\"\n    },\n    \"broom\": {\n      \"Package\": \"broom\",\n      \"Version\": \"1.0.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"backports\",\n        \"dplyr\",\n        \"ellipsis\",\n        \"generics\",\n        \"glue\",\n        \"lifecycle\",\n        \"purrr\",\n        \"rlang\",\n        \"stringr\",\n        \"tibble\",\n        \"tidyr\"\n      ],\n      \"Hash\": \"fd25391c3c4f6ecf0fa95f1e6d15378c\"\n    },\n    \"bslib\": {\n      \"Package\": \"bslib\",\n      \"Version\": \"0.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"cachem\",\n        \"grDevices\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"memoise\",\n        \"mime\",\n        \"rlang\",\n        \"sass\"\n      ],\n      \"Hash\": \"1b117970533deb6d4e992c1b34e9d905\"\n    },\n    \"cachem\": {\n      \"Package\": \"cachem\",\n      \"Version\": \"1.0.8\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"fastmap\",\n        \"rlang\"\n      ],\n      \"Hash\": \"c35768291560ce302c0a6589f92e837d\"\n    },\n    \"cli\": {\n      \"Package\": \"cli\",\n      \"Version\": \"3.6.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"1216ac65ac55ec0058a6f75d7ca0fd52\"\n    },\n    \"colorspace\": {\n      \"Package\": \"colorspace\",\n      \"Version\": \"2.1-0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\",\n        \"methods\",\n        \"stats\"\n      ],\n      \"Hash\": \"f20c47fd52fae58b4e377c37bb8c335b\"\n    },\n    \"commonmark\": {\n      \"Package\": \"commonmark\",\n      \"Version\": \"1.9.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"5d8225445acb167abf7797de48b2ee3c\"\n    },\n    \"config\": {\n      \"Package\": \"config\",\n      \"Version\": \"0.3.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"yaml\"\n      ],\n      \"Hash\": \"8b7222e9d9eb5178eea545c0c4d33fc2\"\n    },\n    \"corrplot\": {\n      \"Package\": \"corrplot\",\n      \"Version\": \"0.92\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"fcf11a91936fd5047b2ee9bc00595e36\"\n    },\n    \"countrycode\": {\n      \"Package\": \"countrycode\",\n      \"Version\": \"1.6.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"08b7058813f13c7a1bb294fea9045e3a\"\n    },\n    \"cpp11\": {\n      \"Package\": \"cpp11\",\n      \"Version\": \"0.4.7\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"5a295d7d963cc5035284dcdbaf334f4e\"\n    },\n    \"crayon\": {\n      \"Package\": \"crayon\",\n      \"Version\": \"1.5.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"grDevices\",\n        \"methods\",\n        \"utils\"\n      ],\n      \"Hash\": \"e8a1e41acf02548751f45c718d55aa6a\"\n    },\n    \"curl\": {\n      \"Package\": \"curl\",\n      \"Version\": \"5.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"411ca2c03b1ce5f548345d2fc2685f7a\"\n    },\n    \"data.table\": {\n      \"Package\": \"data.table\",\n      \"Version\": \"1.15.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"8ee9ac56ef633d0c7cab8b2ca87d683e\"\n    },\n    \"digest\": {\n      \"Package\": \"digest\",\n      \"Version\": \"0.6.35\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"698ece7ba5a4fa4559e3d537e7ec3d31\"\n    },\n    \"dplyr\": {\n      \"Package\": \"dplyr\",\n      \"Version\": \"1.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"cli\",\n        \"generics\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"methods\",\n        \"pillar\",\n        \"rlang\",\n        \"tibble\",\n        \"tidyselect\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"fedd9d00c2944ff00a0e2696ccf048ec\"\n    },\n    \"echarts4r\": {\n      \"Package\": \"echarts4r\",\n      \"Version\": \"0.4.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"broom\",\n        \"corrplot\",\n        \"countrycode\",\n        \"dplyr\",\n        \"htmltools\",\n        \"htmlwidgets\",\n        \"jsonlite\",\n        \"purrr\",\n        \"rstudioapi\",\n        \"scales\",\n        \"shiny\"\n      ],\n      \"Hash\": \"4247fd6acd3bdb4a481479f469956d2f\"\n    },\n    \"ellipsis\": {\n      \"Package\": \"ellipsis\",\n      \"Version\": \"0.3.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"rlang\"\n      ],\n      \"Hash\": \"bb0eec2fe32e88d9e2836c2f73ea2077\"\n    },\n    \"evaluate\": {\n      \"Package\": \"evaluate\",\n      \"Version\": \"0.23\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"daf4a1246be12c1fa8c7705a0935c1a0\"\n    },\n    \"fansi\": {\n      \"Package\": \"fansi\",\n      \"Version\": \"1.0.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"utils\"\n      ],\n      \"Hash\": \"962174cf2aeb5b9eea581522286a911f\"\n    },\n    \"farver\": {\n      \"Package\": \"farver\",\n      \"Version\": \"2.1.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"680887028577f3fa2a81e410ed0d6e42\"\n    },\n    \"fastmap\": {\n      \"Package\": \"fastmap\",\n      \"Version\": \"1.1.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"f7736a18de97dea803bde0a2daaafb27\"\n    },\n    \"fontawesome\": {\n      \"Package\": \"fontawesome\",\n      \"Version\": \"0.5.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"htmltools\",\n        \"rlang\"\n      ],\n      \"Hash\": \"c2efdd5f0bcd1ea861c2d4e2a883a67d\"\n    },\n    \"fs\": {\n      \"Package\": \"fs\",\n      \"Version\": \"1.6.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"47b5f30c720c23999b913a1a635cf0bb\"\n    },\n    \"generics\": {\n      \"Package\": \"generics\",\n      \"Version\": \"0.1.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"15e9634c0fcd294799e9b2e929ed1b86\"\n    },\n    \"glue\": {\n      \"Package\": \"glue\",\n      \"Version\": \"1.7.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"e0b3a53876554bd45879e596cdb10a52\"\n    },\n    \"golem\": {\n      \"Package\": \"golem\",\n      \"Version\": \"0.4.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"attempt\",\n        \"config\",\n        \"here\",\n        \"htmltools\",\n        \"rlang\",\n        \"shiny\",\n        \"utils\",\n        \"yaml\"\n      ],\n      \"Hash\": \"dc12172dc35c6c80e18b430dc546fc24\"\n    },\n    \"here\": {\n      \"Package\": \"here\",\n      \"Version\": \"1.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"rprojroot\"\n      ],\n      \"Hash\": \"24b224366f9c2e7534d2344d10d59211\"\n    },\n    \"highr\": {\n      \"Package\": \"highr\",\n      \"Version\": \"0.10\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"xfun\"\n      ],\n      \"Hash\": \"06230136b2d2b9ba5805e1963fa6e890\"\n    },\n    \"htmltools\": {\n      \"Package\": \"htmltools\",\n      \"Version\": \"0.5.8\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"digest\",\n        \"fastmap\",\n        \"grDevices\",\n        \"rlang\",\n        \"utils\"\n      ],\n      \"Hash\": \"149431ee39aba5bdc264112c8ff94444\"\n    },\n    \"htmlwidgets\": {\n      \"Package\": \"htmlwidgets\",\n      \"Version\": \"1.6.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"grDevices\",\n        \"htmltools\",\n        \"jsonlite\",\n        \"knitr\",\n        \"rmarkdown\",\n        \"yaml\"\n      ],\n      \"Hash\": \"04291cc45198225444a397606810ac37\"\n    },\n    \"httpuv\": {\n      \"Package\": \"httpuv\",\n      \"Version\": \"1.6.14\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"Rcpp\",\n        \"later\",\n        \"promises\",\n        \"utils\"\n      ],\n      \"Hash\": \"16abeb167dbf511f8cc0552efaf05bab\"\n    },\n    \"httr\": {\n      \"Package\": \"httr\",\n      \"Version\": \"1.4.7\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"curl\",\n        \"jsonlite\",\n        \"mime\",\n        \"openssl\"\n      ],\n      \"Hash\": \"ac107251d9d9fd72f0ca8049988f1d7f\"\n    },\n    \"jquerylib\": {\n      \"Package\": \"jquerylib\",\n      \"Version\": \"0.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"htmltools\"\n      ],\n      \"Hash\": \"5aab57a3bd297eee1c1d862735972182\"\n    },\n    \"jsonlite\": {\n      \"Package\": \"jsonlite\",\n      \"Version\": \"1.8.8\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"methods\"\n      ],\n      \"Hash\": \"e1b9c55281c5adc4dd113652d9e26768\"\n    },\n    \"knitr\": {\n      \"Package\": \"knitr\",\n      \"Version\": \"1.45\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"evaluate\",\n        \"highr\",\n        \"methods\",\n        \"tools\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"1ec462871063897135c1bcbe0fc8f07d\"\n    },\n    \"labeling\": {\n      \"Package\": \"labeling\",\n      \"Version\": \"0.4.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"graphics\",\n        \"stats\"\n      ],\n      \"Hash\": \"b64ec208ac5bc1852b285f665d6368b3\"\n    },\n    \"later\": {\n      \"Package\": \"later\",\n      \"Version\": \"1.3.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"Rcpp\",\n        \"rlang\"\n      ],\n      \"Hash\": \"a3e051d405326b8b0012377434c62b37\"\n    },\n    \"lattice\": {\n      \"Package\": \"lattice\",\n      \"Version\": \"0.22-5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\",\n        \"grid\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"7c5e89f04e72d6611c77451f6331a091\"\n    },\n    \"lifecycle\": {\n      \"Package\": \"lifecycle\",\n      \"Version\": \"1.0.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"rlang\"\n      ],\n      \"Hash\": \"b8552d117e1b808b09a832f589b79035\"\n    },\n    \"lubridate\": {\n      \"Package\": \"lubridate\",\n      \"Version\": \"1.9.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"generics\",\n        \"methods\",\n        \"timechange\"\n      ],\n      \"Hash\": \"680ad542fbcf801442c83a6ac5a2126c\"\n    },\n    \"magrittr\": {\n      \"Package\": \"magrittr\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"7ce2733a9826b3aeb1775d56fd305472\"\n    },\n    \"memoise\": {\n      \"Package\": \"memoise\",\n      \"Version\": \"2.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"cachem\",\n        \"rlang\"\n      ],\n      \"Hash\": \"e2817ccf4a065c5d9d7f2cfbe7c1d78c\"\n    },\n    \"mime\": {\n      \"Package\": \"mime\",\n      \"Version\": \"0.12\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"tools\"\n      ],\n      \"Hash\": \"18e9c28c1d3ca1560ce30658b22ce104\"\n    },\n    \"munsell\": {\n      \"Package\": \"munsell\",\n      \"Version\": \"0.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"colorspace\",\n        \"methods\"\n      ],\n      \"Hash\": \"4fd8900853b746af55b81fda99da7695\"\n    },\n    \"openssl\": {\n      \"Package\": \"openssl\",\n      \"Version\": \"2.1.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"askpass\"\n      ],\n      \"Hash\": \"ea2475b073243d9d338aa8f086ce973e\"\n    },\n    \"pillar\": {\n      \"Package\": \"pillar\",\n      \"Version\": \"1.9.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"cli\",\n        \"fansi\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\",\n        \"utf8\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"15da5a8412f317beeee6175fbc76f4bb\"\n    },\n    \"pkgconfig\": {\n      \"Package\": \"pkgconfig\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"utils\"\n      ],\n      \"Hash\": \"01f28d4278f15c76cddbea05899c5d6f\"\n    },\n    \"png\": {\n      \"Package\": \"png\",\n      \"Version\": \"0.1-8\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"bd54ba8a0a5faded999a7aab6e46b374\"\n    },\n    \"promises\": {\n      \"Package\": \"promises\",\n      \"Version\": \"1.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R6\",\n        \"Rcpp\",\n        \"fastmap\",\n        \"later\",\n        \"magrittr\",\n        \"rlang\",\n        \"stats\"\n      ],\n      \"Hash\": \"0d8a15c9d000970ada1ab21405387dee\"\n    },\n    \"purrr\": {\n      \"Package\": \"purrr\",\n      \"Version\": \"1.0.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"rlang\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"1cba04a4e9414bdefc9dcaa99649a8dc\"\n    },\n    \"rappdirs\": {\n      \"Package\": \"rappdirs\",\n      \"Version\": \"0.3.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"5e3c5dc0b071b21fa128676560dbe94d\"\n    },\n    \"renv\": {\n      \"Package\": \"renv\",\n      \"Version\": \"1.0.7\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"utils\"\n      ],\n      \"Hash\": \"397b7b2a265bc5a7a06852524dabae20\"\n    },\n    \"reticulate\": {\n      \"Package\": \"reticulate\",\n      \"Version\": \"1.36.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"Matrix\",\n        \"R\",\n        \"Rcpp\",\n        \"RcppTOML\",\n        \"graphics\",\n        \"here\",\n        \"jsonlite\",\n        \"methods\",\n        \"png\",\n        \"rappdirs\",\n        \"rlang\",\n        \"utils\",\n        \"withr\"\n      ],\n      \"Hash\": \"e037fb5dc364efdaf616eb6bc05aaca2\"\n    },\n    \"rlang\": {\n      \"Package\": \"rlang\",\n      \"Version\": \"1.1.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"42548638fae05fd9a9b5f3f437fbbbe2\"\n    },\n    \"rmarkdown\": {\n      \"Package\": \"rmarkdown\",\n      \"Version\": \"2.26\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"bslib\",\n        \"evaluate\",\n        \"fontawesome\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"knitr\",\n        \"methods\",\n        \"tinytex\",\n        \"tools\",\n        \"utils\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"9b148e7f95d33aac01f31282d49e4f44\"\n    },\n    \"rprojroot\": {\n      \"Package\": \"rprojroot\",\n      \"Version\": \"2.0.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"4c8415e0ec1e29f3f4f6fc108bef0144\"\n    },\n    \"rstudioapi\": {\n      \"Package\": \"rstudioapi\",\n      \"Version\": \"0.16.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"96710351d642b70e8f02ddeb237c46a7\"\n    },\n    \"sass\": {\n      \"Package\": \"sass\",\n      \"Version\": \"0.4.9\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R6\",\n        \"fs\",\n        \"htmltools\",\n        \"rappdirs\",\n        \"rlang\"\n      ],\n      \"Hash\": \"d53dbfddf695303ea4ad66f86e99b95d\"\n    },\n    \"scales\": {\n      \"Package\": \"scales\",\n      \"Version\": \"1.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"RColorBrewer\",\n        \"farver\",\n        \"labeling\",\n        \"lifecycle\",\n        \"munsell\",\n        \"rlang\",\n        \"viridisLite\"\n      ],\n      \"Hash\": \"906cb23d2f1c5680b8ce439b44c6fa63\"\n    },\n    \"shiny\": {\n      \"Package\": \"shiny\",\n      \"Version\": \"1.7.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"bslib\",\n        \"cachem\",\n        \"commonmark\",\n        \"crayon\",\n        \"ellipsis\",\n        \"fastmap\",\n        \"fontawesome\",\n        \"glue\",\n        \"grDevices\",\n        \"htmltools\",\n        \"httpuv\",\n        \"jsonlite\",\n        \"later\",\n        \"lifecycle\",\n        \"methods\",\n        \"mime\",\n        \"promises\",\n        \"rlang\",\n        \"sourcetools\",\n        \"tools\",\n        \"utils\",\n        \"withr\",\n        \"xtable\"\n      ],\n      \"Hash\": \"c2eae3d8c670fa9dfa35a12066f4a1d5\"\n    },\n    \"shinyWidgets\": {\n      \"Package\": \"shinyWidgets\",\n      \"Version\": \"0.8.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"anytime\",\n        \"bslib\",\n        \"grDevices\",\n        \"htmltools\",\n        \"jsonlite\",\n        \"rlang\",\n        \"sass\",\n        \"shiny\"\n      ],\n      \"Hash\": \"bc918b6911c4e928e24a9928295de834\"\n    },\n    \"shinyalert\": {\n      \"Package\": \"shinyalert\",\n      \"Version\": \"3.1.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"htmltools\",\n        \"shiny\",\n        \"uuid\"\n      ],\n      \"Hash\": \"45f99f3173e5513e2dec78dc4d63f9f0\"\n    },\n    \"shinycssloaders\": {\n      \"Package\": \"shinycssloaders\",\n      \"Version\": \"1.0.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"digest\",\n        \"glue\",\n        \"grDevices\",\n        \"shiny\"\n      ],\n      \"Hash\": \"f39bb3c44a9b496723ec7e86f9a771d8\"\n    },\n    \"shinyjs\": {\n      \"Package\": \"shinyjs\",\n      \"Version\": \"2.1.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"digest\",\n        \"jsonlite\",\n        \"shiny\"\n      ],\n      \"Hash\": \"802e4786b353a4bb27116957558548d5\"\n    },\n    \"shinyscreenshot\": {\n      \"Package\": \"shinyscreenshot\",\n      \"Version\": \"0.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"htmltools\",\n        \"jsonlite\",\n        \"shiny\",\n        \"uuid\"\n      ],\n      \"Hash\": \"4c8b592813a54437e82a626cc7553e59\"\n    },\n    \"sourcetools\": {\n      \"Package\": \"sourcetools\",\n      \"Version\": \"0.1.7-1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"5f5a7629f956619d519205ec475fe647\"\n    },\n    \"stringi\": {\n      \"Package\": \"stringi\",\n      \"Version\": \"1.8.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"stats\",\n        \"tools\",\n        \"utils\"\n      ],\n      \"Hash\": \"058aebddea264f4c99401515182e656a\"\n    },\n    \"stringr\": {\n      \"Package\": \"stringr\",\n      \"Version\": \"1.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"rlang\",\n        \"stringi\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"960e2ae9e09656611e0b8214ad543207\"\n    },\n    \"sys\": {\n      \"Package\": \"sys\",\n      \"Version\": \"3.4.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"3a1be13d68d47a8cd0bfd74739ca1555\"\n    },\n    \"tibble\": {\n      \"Package\": \"tibble\",\n      \"Version\": \"3.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"fansi\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"methods\",\n        \"pillar\",\n        \"pkgconfig\",\n        \"rlang\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"a84e2cc86d07289b3b6f5069df7a004c\"\n    },\n    \"tidyr\": {\n      \"Package\": \"tidyr\",\n      \"Version\": \"1.3.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"cpp11\",\n        \"dplyr\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"purrr\",\n        \"rlang\",\n        \"stringr\",\n        \"tibble\",\n        \"tidyselect\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"915fb7ce036c22a6a33b5a8adb712eb1\"\n    },\n    \"tidyselect\": {\n      \"Package\": \"tidyselect\",\n      \"Version\": \"1.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\",\n        \"vctrs\",\n        \"withr\"\n      ],\n      \"Hash\": \"829f27b9c4919c16b593794a6344d6c0\"\n    },\n    \"timechange\": {\n      \"Package\": \"timechange\",\n      \"Version\": \"0.3.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cpp11\"\n      ],\n      \"Hash\": \"c5f3c201b931cd6474d17d8700ccb1c8\"\n    },\n    \"tinytex\": {\n      \"Package\": \"tinytex\",\n      \"Version\": \"0.50\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"xfun\"\n      ],\n      \"Hash\": \"be7a76845222ad20adb761f462eed3ea\"\n    },\n    \"tzdb\": {\n      \"Package\": \"tzdb\",\n      \"Version\": \"0.4.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cpp11\"\n      ],\n      \"Hash\": \"f561504ec2897f4d46f0c7657e488ae1\"\n    },\n    \"utf8\": {\n      \"Package\": \"utf8\",\n      \"Version\": \"1.2.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"62b65c52671e6665f803ff02954446e9\"\n    },\n    \"uuid\": {\n      \"Package\": \"uuid\",\n      \"Version\": \"1.2-0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"303c19bfd970bece872f93a824e323d9\"\n    },\n    \"vctrs\": {\n      \"Package\": \"vctrs\",\n      \"Version\": \"0.6.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\"\n      ],\n      \"Hash\": \"c03fa420630029418f7e6da3667aac4a\"\n    },\n    \"viridisLite\": {\n      \"Package\": \"viridisLite\",\n      \"Version\": \"0.4.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"c826c7c4241b6fc89ff55aaea3fa7491\"\n    },\n    \"withr\": {\n      \"Package\": \"withr\",\n      \"Version\": \"3.0.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\"\n      ],\n      \"Hash\": \"d31b6c62c10dcf11ec530ca6b0dd5d35\"\n    },\n    \"xfun\": {\n      \"Package\": \"xfun\",\n      \"Version\": \"0.43\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"grDevices\",\n        \"stats\",\n        \"tools\"\n      ],\n      \"Hash\": \"ab6371d8653ce5f2f9290f4ec7b42a8e\"\n    },\n    \"xml2\": {\n      \"Package\": \"xml2\",\n      \"Version\": \"1.3.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"methods\",\n        \"rlang\"\n      ],\n      \"Hash\": \"1d0336142f4cd25d8d23cd3ba7a8fb61\"\n    },\n    \"xtable\": {\n      \"Package\": \"xtable\",\n      \"Version\": \"1.8-4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"b8acdf8af494d9ec19ccb2481a9b11c2\"\n    },\n    \"yaml\": {\n      \"Package\": \"yaml\",\n      \"Version\": \"2.3.8\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"29240487a071f535f5e5d5a323b7afbd\"\n    }\n  }\n}"
  },
  {
    "objectID": "index.html#si-repites-mucho-código-en-shiny-para-crear-bloques-de-html-lo-estás-haciendo-mal",
    "href": "index.html#si-repites-mucho-código-en-shiny-para-crear-bloques-de-html-lo-estás-haciendo-mal",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Si repites mucho código en Shiny para crear bloques de HTML, lo estás haciendo mal",
    "text": "Si repites mucho código en Shiny para crear bloques de HTML, lo estás haciendo mal\n\n\nC:/Users/Leonardo.Hansa/Documents/tools/pinkiepie/inst/shinyApp/ui/\n├── ui_areaplot.R\n├── ui_barplot.R\n├── ui_colours.R\n├── ui_comboplot.R\n├── ui_datatable.R\n├── ui_lineplot.R\n├── ui_scatterplot.R\n├── ui_settings.R\n├── ui_sunburst.R\n├── ui_waterfall.R\n├── ui_yoybarplot.R\n└── ui_yoylineplot.R"
  },
  {
    "objectID": "index.html#esos-códigos-forman-parte-de-una-shiny-app-que-genera-como-este",
    "href": "index.html#esos-códigos-forman-parte-de-una-shiny-app-que-genera-como-este",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Esos códigos forman parte de una Shiny app que genera como este…",
    "text": "Esos códigos forman parte de una Shiny app que genera como este…"
  },
  {
    "objectID": "index.html#y-este",
    "href": "index.html#y-este",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "…y este",
    "text": "…y este"
  },
  {
    "objectID": "index.html#el-código-del-primero-es-este",
    "href": "index.html#el-código-del-primero-es-este",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "El código del primero es este…",
    "text": "El código del primero es este…\n\ntabItem(\n        tabName = \"areaplot\",\n\n        # Settings ---------------------------------------------------------------------------------\n\n        fluidRow(\n                SaveLoadSettingsUI(id = \"area\")\n        ),\n\n        # Formating --------------------------------------------------------------------------------\n\n        fluidRow(\n                column(\n                        width = 4,\n                        tabBox(\n                                title = \"Formatting\",\n                                height = \"300px\",\n                                width = NULL,\n                                side = \"right\",\n                                tabPanel(\n                                        title = \"Axis\",\n                                        FormatingAxisUI(\n                                                id = \"area\",\n                                                period = \"1 month\"\n                                        )\n                                ),\n\n                                # Labels -------------------------------------------------------------\n\n                                tabPanel(\n                                        title = \"Labels/Legend\",\n                                        FormatingLabelsUI(\n                                                id = \"area\",\n                                                rot = -90\n                                        )\n                                ),\n                                tabPanel(\n                                        title = \"Text Size\",\n                                        FormatingTextUI(\n                                                id = \"area\",\n                                                axis_val = 14,\n                                                label_val = 14,\n                                                legend_val = 12\n                                        )\n                                ),\n\n                                # Colours ------------------------------------------------------------\n                                tabPanel(\n                                        title = \"Colours\",\n                                        FormatingColoursUI(\n                                                id = \"area\"\n                                        )\n                                )\n                        )\n                ),\n\n                # Variables ------------------------------------------------------------------------\n\n                column(\n                        width = 5,\n                        tabBox(\n                                title = \"Select Variables\",\n                                height = \"300px\",\n                                width = NULL,\n                                side = \"right\",\n                                tabPanel(\n                                        title = \"Variables\",\n                                        fluidRow(\n                                                column(\n                                                        width = 3,\n                                                        uiOutput(\"DateRange_Area\"),\n                                                        uiOutput(\"PlotVar_Area\"),\n                                                        uiOutput(\"topn_area\")\n                                                ),\n                                                column(\n                                                        width = 3,\n                                                        uiOutput(\"GroupBy_Area\"),\n                                                        uiOutput(\"FacetBy_Area\"),\n                                                        uiOutput(\"FacetBy_Subset_Area\")\n                                                ),\n                                                column(\n                                                        width = 3,\n                                                        uiOutput(\"GroupByLevels_Area\"),\n                                                        uiOutput(\"FacetByLevels_Area\"),\n                                                        uiOutput(\"FacetByLevels_Subset_Area\")\n                                                ),\n                                                column(\n                                                        width = 3,\n                                                        uiOutput(\"ColourBy_Area\"),\n                                                        uiOutput(\"Facet_Transpose_Area\")\n                                                )\n                                        )\n                                )\n                        )\n                ),\n\n                # Chart Settings -------------------------------------------------------------------\n\n                column(\n                        width = 3,\n                        tabBox(\n                                title = \"Chart settings\",\n                                height = \"300px\",\n                                width = NULL,\n                                side = \"right\",\n                                tabPanel(\n                                        title = \"Plot parameters\",\n                                        fluidRow(\n                                                column(\n                                                        width = 6,\n                                                        prettyCheckbox(\n                                                                inputId = \"y_axis_free_area\",\n                                                                label = \"Free Y axis\",\n                                                                value = FALSE,\n                                                                status = \"success\",\n                                                                shape = \"round\",\n                                                                outline = TRUE\n                                                        ),\n                                                        prettyCheckbox(\n                                                                inputId = \"bars_area\",\n                                                                label = \"Bar chart\",\n                                                                value = FALSE,\n                                                                status = \"success\",\n                                                                shape = \"round\",\n                                                                outline = TRUE\n                                                        ),\n                                                        prettyCheckbox(\n                                                                inputId = \"order_area\",\n                                                                label = \"Order by size\",\n                                                                value = TRUE,\n                                                                status = \"success\",\n                                                                shape = \"round\",\n                                                                outline = TRUE\n                                                        ),\n                                                        sliderInput(\n                                                                inputId = \"alpha_area\",\n                                                                label = \"Transparency\",\n                                                                min = 0,\n                                                                max = 1,\n                                                                value = 1,\n                                                                step = 0.05\n                                                        )\n                                                ),\n                                                column(\n                                                        width = 6,\n                                                        prettyCheckbox(\n                                                                inputId = \"grid_lines_area\",\n                                                                label = \"Grid lines\",\n                                                                value = TRUE,\n                                                                status = \"success\",\n                                                                shape = \"round\",\n                                                                outline = TRUE\n                                                        ),\n                                                        prettyCheckbox(\n                                                                inputId = \"remove_legend_area\",\n                                                                label = \"Remove legend\",\n                                                                value = FALSE,\n                                                                status = \"success\",\n                                                                shape = \"round\",\n                                                                outline = TRUE\n                                                        ),\n                                                        prettyCheckbox(\n                                                                inputId = \"border_area\",\n                                                                label = \"Add border\",\n                                                                value = FALSE,\n                                                                status = \"success\",\n                                                                shape = \"round\",\n                                                                outline = TRUE\n                                                        ),\n                                                        prettyCheckbox(\n                                                                inputId = \"auto_format_area\",\n                                                                label = \"Auto formatting\",\n                                                                value = TRUE,\n                                                                status = \"success\",\n                                                                shape = \"round\",\n                                                                outline = TRUE\n                                                        )\n                                                )\n                                        )\n                                ),\n\n                                # Save plot ----------------------------------------------------------\n\n                                tabPanel(\n                                        title = \"Dimensions & Save\",\n                                        fluidRow(\n                                                DownloadPlot(\n                                                        id = \"area\"\n                                                )\n                                        ),\n                                        fluidRow(\n                                                column(\n                                                        width = 12,\n                                                        textInput(\n                                                                inputId = \"title_area\",\n                                                                label = \"Plot title\",\n                                                                value = \"\"\n                                                        )\n                                                )\n                                        )\n                                )\n                        )\n                )\n        ),\n\n        # Plot output ------------------------------------------------------------------------------\n\n        plotlyOutput(\n                outputId = \"areaplot\",\n                height = \"550px\"\n        ) %&gt;%\n                withSpinner(\n                        type = 1,\n                        color = \"#00FFAE\"\n                )\n)"
  },
  {
    "objectID": "index.html#y-el-del-segundo-es-este",
    "href": "index.html#y-el-del-segundo-es-este",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "…y el del segundo es este",
    "text": "…y el del segundo es este\n\ntabItem(\n       tabName = \"lineplot\",\n\n       # Settings ---------------------------------------------------------------------------------\n\n       fluidRow(\n              SaveLoadSettingsUI(id = \"line\")\n       ),\n\n       # Formating --------------------------------------------------------------------------------\n\n       fluidRow(\n              column(\n                     width = 3,\n                     tabBox(\n                            title = \"Formatting\",\n                            height = \"400px\",\n                            width = NULL,\n                            side = \"right\",\n                            tabPanel(\n                                   title = \"Axis\",\n                                   FormatingAxisUI(id = \"line\", period = \"1 month\"),\n                            ),\n\n                            # Labels -------------------------------------------------------------\n\n                            tabPanel(\n                                   title = \"Labels/Legend\",\n                                   FormatingLabelsUI(id = \"line\", rot = -90)\n                            ),\n                            tabPanel(\n                                   title = \"Text Size\",\n                                   FormatingTextUI(id = \"line\")\n                            ),\n\n                            # Colours ------------------------------------------------------------\n\n                            tabPanel(\n                                   title = \"Colours\",\n                                   FormatingColoursUI(id = \"line\")\n                            )\n                     )\n              ),\n\n              # Variables ------------------------------------------------------------------------\n\n              column(\n                     width = 7,\n                     tabBox(\n                            title = \"Select Variables\",\n                            height = \"400px\",\n                            width = NULL,\n                            side = \"right\",\n                            tabPanel(\n                                   title = \"Variables\",\n                                   fluidPage(\n                                          fluidRow(\n                                                 column(\n                                                        width = 4,\n                                                        uiOutput(\"DateRange_Line\"),\n                                                        uiOutput(\"PlotVar_Line\"),\n                                                        uiOutput(\"PlotVar_Line2\")\n                                                 ),\n                                                 column(\n                                                        width = 4,\n                                                        uiOutput(\"ColourBy_Line\"),\n                                                        radioGroupButtons(\n                                                               inputId = \"agg_line_var1\",\n                                                               label = \"Variable 1 Aggregation\",\n                                                               choices = c(\n                                                                      \"sum\",\n                                                                      \"mean\",\n                                                                      \"max\",\n                                                                      \"min\",\n                                                                      \"median\"\n                                                               ),\n                                                               individual = TRUE,\n                                                               checkIcon = list(\n                                                                      yes = tags$i(\n                                                                             class = \"fa fa-check-square\",\n                                                                             style = \"color: green\"\n                                                                      ),\n                                                                      no = tags$i(\n                                                                             class = \"fa fa-square-o\",\n                                                                             style = \"color: green\"\n                                                                      )\n                                                               )\n                                                        ),\n                                                        radioGroupButtons(\n                                                               inputId = \"agg_line_var2\",\n                                                               label = \"Variable 2 Aggregation\",\n                                                               choices = c(\n                                                                      \"sum\",\n                                                                      \"mean\",\n                                                                      \"max\",\n                                                                      \"min\",\n                                                                      \"median\"\n                                                               ),\n                                                               individual = TRUE,\n                                                               checkIcon = list(\n                                                                      yes = tags$i(\n                                                                             class = \"fa fa-check-square\",\n                                                                             style = \"color: green\"\n                                                                      ),\n                                                                      no = tags$i(\n                                                                             class = \"fa fa-square-o\",\n                                                                             style = \"color: green\"\n                                                                      )\n                                                               )\n                                                        )\n                                                 ),\n                                                 column(\n                                                        width = 2,\n                                                        uiOutput(\"GroupBy_Line\"),\n                                                        uiOutput(\"FacetBy_Line\"),\n                                                        uiOutput(\"FacetBy_Subset_Line\")\n                                                 ),\n                                                 column(\n                                                        width = 2,\n                                                        uiOutput(\"GroupByLevels_Line\"),\n                                                        uiOutput(\"FacetByLevels_Line\"),\n                                                        uiOutput(\"FacetByLevels_Subset_Line\"),\n                                                        uiOutput(\"Facet_Transpose_Line\")\n                                                 )\n                                          ),\n                                          fluidRow(\n                                                 prettyCheckbox(\n                                                        inputId = \"include_campaigns\",\n                                                        label = \"Include Campaigns\",\n                                                        value = FALSE,\n                                                        status = \"success\",\n                                                        shape = \"round\",\n                                                        outline = TRUE\n                                                 ),\n                                                 #\n                                                 # tags$a(id = 'include_campaigns',\n                                                 #        'Include Campaigns'),\n                                                 hidden(\n                                                        tags$div(\n                                                               id = \"campaigns_drop\",\n                                                               # class = 'row',\n                                                               tags$div(\n                                                                      class = \"col-xs-4 text-center\",\n                                                                      # style = \"display:inline-block;width:32%;text-align: center;\",\n                                                                      fileInput(\n                                                                             inputId = \"campaign_data\",\n                                                                             label = \"Select Campaigns file\",\n                                                                             accept = \".csv\",\n                                                                             buttonLabel = \"Browse\"\n                                                                      )\n                                                               ),\n                                                               tags$div(\n                                                                      class = \"col-xs-4 text-center\",\n                                                                      style = \"display:inline;\",\n                                                                      actionButton(\n                                                                             inputId = \"reset_campaign\",\n                                                                             label = \"Reset Campaign input\"\n                                                                      )\n                                                               ),\n                                                               tags$div(\n                                                                      class = \"col-xs-4 text-center\",\n                                                                      # style = \"display:inline-block;width:32%;text-align: center;\",\n                                                                      tags$h5(\n                                                                             \"To overlap campaigns periods\n                                                                                          in the plot, must load a csv\n                                                                                          containing the columns :\",\n                                                                             strong(\"Campaign\"), \",\",\n                                                                             strong(\"WeekStart\"), \",\",\n                                                                             strong(\"WeekEnd\")\n                                                                      )\n                                                               )\n                                                        )\n                                                 )\n                                          )\n                                   )\n                            )\n                     )\n              ),\n\n              # Chart Settings ------------------------------------------------------------------------------\n\n              column(\n                     width = 2,\n                     tabBox(\n                            title = \"Chart settings\",\n                            height = \"400px\",\n                            width = NULL,\n                            side = \"right\",\n                            tabPanel(\n                                   title = \"Plot parameters\",\n                                   fluidRow(\n                                          column(\n                                                 width = 6,\n                                                 prettyCheckbox(\n                                                        inputId = \"y_axis_free_line\",\n                                                        label = \"Free Y axis\",\n                                                        value = FALSE,\n                                                        status = \"success\",\n                                                        shape = \"round\",\n                                                        outline = TRUE\n                                                 ),\n                                                 prettyCheckbox(\n                                                        inputId = \"grid_lines_line\",\n                                                        label = \"Grid lines\",\n                                                        value = TRUE,\n                                                        status = \"success\",\n                                                        shape = \"round\",\n                                                        outline = TRUE\n                                                 ),\n                                                 prettyCheckbox(\n                                                        inputId = \"sec_axis_line\",\n                                                        label = \"Second axis\",\n                                                        value = FALSE,\n                                                        status = \"success\",\n                                                        shape = \"round\",\n                                                        outline = TRUE\n                                                 )\n                                          ),\n                                          column(\n                                                 width = 6,\n                                                 prettyCheckbox(\n                                                        inputId = \"remove_legend_line\",\n                                                        label = \"Remove legend\",\n                                                        value = FALSE,\n                                                        status = \"success\",\n                                                        shape = \"round\",\n                                                        outline = TRUE\n                                                 ),\n                                                 prettyCheckbox(\n                                                        inputId = \"border_line\",\n                                                        label = \"Add border\",\n                                                        value = FALSE,\n                                                        status = \"success\",\n                                                        shape = \"round\",\n                                                        outline = TRUE\n                                                 ),\n                                                 prettyCheckbox(\n                                                        inputId = \"auto_format_line\",\n                                                        label = \"Auto formatting\",\n                                                        value = TRUE,\n                                                        status = \"success\",\n                                                        shape = \"round\",\n                                                        outline = TRUE\n                                                 )\n                                          )\n                                   ),\n                                   fluidRow(\n                                          column(\n                                                 width = 12,\n                                                 textInput(\"title_line\",\n                                                        label = \"Plot title\",\n                                                        value = \"\"\n                                                 )\n                                          )\n                                   )\n                            ),\n\n                            # Save plot ----------------------------------------------------------\n\n                            tabPanel(\n                                   title = \"Dimensions & Save\",\n                                   DownloadPlot(id = \"line\")\n                            )\n                     )\n              )\n       ),\n\n       # Plot Output ------------------------------------------------------------------------------\n\n       plotlyOutput(\"lineplot\", height = \"500px\") %&gt;%\n              withSpinner(type = 1, color = \"#00FFAE\")\n)"
  },
  {
    "objectID": "index.html#solución-usa-shiny-modules-funciones-que-reutilizas",
    "href": "index.html#solución-usa-shiny-modules-funciones-que-reutilizas",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "¿Solución? Usa Shiny modules, funciones que reutilizas",
    "text": "¿Solución? Usa Shiny modules, funciones que reutilizas\n\n   mod_mediaplot_server(\n    \"dashboard_plot\",\n    mediaDB,\n    dates_media$min_date,\n    dates_media$max_date,\n    dates_media$date_agg,\n    variables_media$group1,\n    variables_media$group1_level,\n    variables_media$metric,\n    variables_media$top_cat,\n    data_down = isolate(settings()$`Allow Data Downloads`)\n  )\n\n  mod_mediaplot_server(\n    \"line_plot\",\n    mediaDB,\n    dates_media$min_date,\n    dates_media$max_date,\n    dates_media$date_agg,\n    variables_media$group1,\n    variables_media$group1_level,\n    variables_media$metric,\n    variables_media$top_cat,\n    data_down = isolate(settings()$`Allow Data Downloads`)\n  )\n\n  mod_mediaplot_server(\n    \"yoy_plot\",\n    mediaDB,\n    dates_media$min_date,\n    dates_media$max_date,\n    dates_media$date_agg,\n    variables_media$group1,\n    variables_media$group1_level,\n    variables_media$metric,\n    variables_media$top_cat,\n    data_down = isolate(settings()$`Allow Data Downloads`)\n  )\n\n  mod_mediaplot_server(\n    \"treemap_plot\",\n    mediaDB,\n    dates_media$min_date,\n    dates_media$max_date,\n    dates_media$date_agg,\n    variables_media$group1,\n    variables_media$group1_level,\n    variables_media$metric,\n    variables_media$top_cat,\n    data_down = isolate(settings()$`Allow Data Downloads`)\n  )"
  },
  {
    "objectID": "index.html#los-módulos-son-funciones-con-elementos-especiales-de-shiny",
    "href": "index.html#los-módulos-son-funciones-con-elementos-especiales-de-shiny",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Los módulos son funciones con elementos especiales de Shiny",
    "text": "Los módulos son funciones con elementos especiales de Shiny\n\nmod_mediaplot_server &lt;- function(id,\n                                 data,\n                                 min_date,\n                                 max_date,\n                                 date_agg,\n                                 group1,\n                                 group1_levels,\n                                 metric,\n                                 top_cat,\n                                 data_down) {\n  moduleServer(id, function(input, output, session) {\n    ns &lt;- session$ns\n\n    plotData_media &lt;- reactive({\n      req(min_date())\n      req(max_date())\n      req(date_agg())\n      req(group1())\n      req(group1_levels())\n      req(metric())\n\n      CreateMediaPlotData(\n        data(),\n        min_date(),\n        max_date(),\n        date_agg(),\n        group1(),\n        group1_levels(),\n        metric(),\n        top_cat()\n      )\n    })\n\n    output$media_area &lt;- echarts4r::renderEcharts4r({\n      validate(\n        need(length(plotData_media()$data1[[\"Category2\"]]) &gt; 0, \"\"),\n        need(nrow(plotData_media()$data1) &gt; 0, \"Date Aggregation not available for selected date range\")\n      )\n\n      AreaPlotMedia(plotData_media()$data1, y_lab = metric(), type = \"area\")\n    })\n\n    output$media_yoy &lt;- echarts4r::renderEcharts4r({\n      validate(\n        need(length(plotData_media()$data2[[\"Category2\"]]) &gt; 0, \"\")\n      )\n\n      YOYPlotMedia(plotData_media()$data2, y_lab = metric())\n    })\n\n    output$media_donut &lt;- echarts4r::renderEcharts4r({\n      validate(\n        need(length(plotData_media()$data3[[\"Category2\"]]) &gt; 0, \"\")\n      )\n\n      DonutPlotMedia(plotData_media()$data3, y_lab = metric())\n    })\n\n    output$media_treemap &lt;- echarts4r::renderEcharts4r({\n      validate(\n        need(length(plotData_media()$data3[[\"Category2\"]]) &gt; 0, \"\")\n      )\n\n      TreeMapPlotMedia(plotData_media()$data4, ylab = metric())\n    })\n\n    output$media_line &lt;- echarts4r::renderEcharts4r({\n      validate(\n        need(length(plotData_media()$data1[[\"Category2\"]]) &gt; 0, \"\"),\n        need(nrow(plotData_media()$data1) &gt; 0, \"Date Aggregation not available for selected date range\")\n      )\n\n      if (input$bar_view) {\n        AreaPlotMedia(plotData_media()$data1, y_lab = metric(), type = \"area\")\n      } else {\n        AreaPlotMedia(plotData_media()$data1, y_lab = metric(), type = \"line\")\n      }\n    })\n\n    data_down_media &lt;- reactive({\n      if (id %in% c(\"dashboard_plot\", \"line_plot\")) {\n        plotData_media()$data1 %&gt;%\n          tidyr::pivot_wider(\n            names_from = Category2,\n            values_from = Metric,\n            values_fill = 0\n          )\n      } else if (id == \"yoy_plot\") {\n        plotData_media()$data2 %&gt;%\n          rename(Group = Category2)\n      } else if (id == \"treemap_plot\") {\n        plotData_media()$data4\n      }\n    })\n\n    mod_download_buttons_server(\n      \"download_data_media\",\n      data = data_down_media,\n      name = id,\n      screen_id = id,\n      data_down1 = data_down\n    )\n  })\n}"
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "Este es el ecosistema R que uso en el trabajo",
    "section": "Quarto",
    "text": "Quarto"
  }
]